assuming u have a rtxen running:
at /root/

$ dd if=/dev/zero of=centos.img bs=1024M count=15  
 # that gives to count*1024 => 10gb img will be 10gb

to mount on loop device to create file system on it
$ losetup /dev/loop3 centos.img
to create file system
$ mkfs.ext4 /dev/loop3

nano c.cfg
wget http://vault.centos.org/7.2.1511/os/x86_64/images/pxeboot/vmlinuz
wget http://vault.centos.org/7.2.1511/os/x86_64/images/pxeboot/initrd.img

name="cent"
vcpus=8
memory=4096
disk=['file:/root/centos.img,xvda,w']
vif=['bridge=virbr0']
on_reboot="restart"
on_crash="restart"
kernel="/root/vmlinuz"
ramdisk="/root/initrd.img"
extra="ksdevice= inst.repo=http://vault.centos.org/centos/7.2.1511/os/x86_64/"


xl create -f c.cfg
xl console cent

# after install vanilla centos
nano c.cfg

name="cent"
vcpus=8
memory=4096
disk=['file:/root/centos.img,xvda,w']
vif=['bridge=virbr0']
on_reboot="restart"
on_crash="restart"
bootloader="pygrub"

xl create -f c.cfg
xl console cent


====setting up domU

# one line:
echo "SUBSYSTEM==\"cpu\",ACTION==\"add\",RUN+=\"/bin/sh -c '[ ! -e /sys\$devpath/online ] || echo 1 > /sys\$devpath/online'\"" > /etc/udev/rules.d/cpu-online.rules && udevadm control --reload-rules && yum -y install nano git gcc wget && yum install -y epel-release && yum install -y python34 python34-setuptools python34-devel && easy_install-3.4 pip && pip3 install numpy && pip3 install imutils && wget http://semanchuk.com/philip/sysv_ipc/sysv_ipc-1.0.0.tar.gz && tar -xzf sysv_ipc-1.0.0.tar.gz && cd sysv_ipc-1.0.0 && python3 setup.py install && cd /root/ && cd /root/ && git clone https://github.com/libheartbeats/heartbeats.git && cd heartbeats && mkdir hbed && echo "export HEARTBEAT_ENABLED_DIR='/root/heartbeats/hbed/'" >> ~/.bashrc && source ~/.bashrc && make clean && make uninstall && make && make install && ldconfig && echo "export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib" >> ~/.bashrc && source ~/.bashrc && cd /root/ && git clone https://github.com/selectel/pyxs && cd pyxs && python3 setup.py install && cd /root/ && git clone https://github.com/chen116/demo_pacer.git && cd demo_pacer && make && cd /root/ && yum -y install python34-tkinter

# break it down:


echo "SUBSYSTEM==\"cpu\",ACTION==\"add\",RUN+=\"/bin/sh -c '[ ! -e /sys\$devpath/online ] || echo 1 > /sys\$devpath/online'\"" > /etc/udev/rules.d/cpu-online.rules && udevadm control --reload-rules 
yum -y install nano git gcc wget && yum install -y epel-release && yum install -y python34 python34-setuptools python34-devel && easy_install-3.4 pip && pip3 install numpy && pip3 install imutils 
wget http://semanchuk.com/philip/sysv_ipc/sysv_ipc-1.0.0.tar.gz && tar -xzf sysv_ipc-1.0.0.tar.gz && cd sysv_ipc-1.0.0 && python3 setup.py install && cd /root/
cd /root/ && git clone https://github.com/libheartbeats/heartbeats.git && cd heartbeats && mkdir hbed && echo "export HEARTBEAT_ENABLED_DIR='/root/heartbeats/hbed/'" >> ~/.bashrc && source ~/.bashrc && make clean && make uninstall && make && make install && ldconfig && echo "export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib" >> ~/.bashrc && source ~/.bashrc && cd /root/  
git clone https://github.com/selectel/pyxs && cd pyxs && python3 setup.py install && cd /root/ 
#&& apt -y install xenstore-utils && cd /root/ && 
git clone https://github.com/chen116/demo_pacer.git && cd demo_pacer && make && cd /root/ 
yum -y install python34-tkinter 
# addition steps(not required, get this from original heartbit repo issues):
# hmod 750 /usr/local/include/heartbeats/

====setting up vnc server=====
# https://turbovnc.org/Downloads/YUM
# https://www.rootusers.com/how-to-install-xfce-gui-in-centos-7-linux/
wget https://turbovnc.org/pmwiki/uploads/Downloads/TurboVNC.repo -P /etc/yum.repos.d && yum install turbovnc -y && yum install epel-release -y && yum groupinstall "X Window System" -y && yum groupinstall "Xfce" -y

reboot (to accpect centos license)


# check out the themes in /usr/share/themes/, and then check in /usr/lib/


/opt/TurboVNC/bin/vncserver

nano ~/.vnc/xstartup.turbovnc
#!/bin/sh
/usr/bin/xfce4-terminal --geometry=60x20 --show-menubar --show-borders --show-scrollbar --font=10




/opt/TurboVNC/bin/vncserver -kill :1
/opt/TurboVNC/bin/vncserver

NOTE:
after creating the domU image, when recreate the domU need to run /opt/TurboVNC/bin/vncserver 

# nano /etc/ssh/ssh_config
# AllowTcpForwarding yes
# systemctl restart sshd


===using vnc====

2 terminal,t1,t2 at dom0:

t1:

ssh -L 5701:localhost:5901 {domU ip}

t2 with vncing to dom0:
/opt/TurboVNC/bin/vncviewer 

(localhost:5701)

after getting in :

openbox &

or 

xfwm4 &


# enter password

=====setting opencv======


cp /root/demo_pacer/build/cv3_install_for_py3.sh /root/ && sh cv3_install_for_py3.sh


===adding space to img(doesnt work)====

dd if=/dev/zero bs=1024M count=5 >> ./centos.img
# thiss will add 5G

parted centos.img

#inside parted console

print free

#Number  Start   End     Size    Type     File system  Flags
#        32.3kB  1049kB  1016kB           Free Space
# 1      1049kB  525MB   524MB   primary  xfs          boot
# 2      525MB   10.7GB  10.2GB  primary               lvm
#        10.7GB  16.1GB  5369MB           Free Space

resizepart 2 16.1GB

q


now create a domU, xl console in, agree terms, blah blah blah, u good to go


