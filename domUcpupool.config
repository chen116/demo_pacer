


 exp1:

 xl create -f VM1.cfg && xl create -f VM2.cfg && xl create -f d1.cfg && xl create -f d2.cfg

 xl vcpu-pin VM1 all all all && xl cpupool-migrate VM1 Pool-0 && xl vcpu-pin VM1 all 8-15 8-15 && xl vcpu-pin d1 all all all && xl cpupool-migrate d1 Pool-0 && xl vcpu-pin d1 all 8-15 8-15 && xl vcpu-pin VM2 all all all && xl cpupool-migrate VM2 pacer_credit && xl vcpu-pin VM2 all 16-23 16-23 && xl vcpu-pin d2 all all all && xl cpupool-migrate d2 pacer_credit && xl vcpu-pin d2 all 16-23 16-23





exp2:

xl shutdown d1 && xl shutdown d2 && xl vcpu-pin VM2 all all all && xl cpupool-migrate VM2 Pool-0 && xl vcpu-pin VM2 all 8-15 8-15


clean up: 
xl shutdown d1 && xl shutdown d2 && xl shutdown VM1 && xl shutdown VM2


xl sched-rtds -d 0 -p 10000 -b 10000

create credit pool:

find out how many cpu available:
xl cpupool-list

divide evenly 

based on how many cpus are available,
decide a-b cpus for credit domUs
decide x-y cpus for RTxen domUs
 remove appropiate amount of cpus from Pool-0 to for credit schedulor pool.

for example, if 

xl cpupool-create name=\"pacer_credit\" sched=\"credit\"
xl cpupool-cpu-remove Pool-0 24-31
xl cpupool-cpu-add pacer_credit 24-31




xl create -f VM1.cfg
xl create -f VM2.cfg
xl create -f d1.cfg
xl create -f d2.cfg


xl cpupool-migrate VM2 pacer_credit
xl cpupool-migrate d2 pacer_credit

xl vcpu-pin VM1 all 16-23 16-23
xl vcpu-pin d1 all 16-23 16-23

xl vcpu-pin VM2 all 24-31 24-31
xl vcpu-pin d2 all 24-31 24-31

xl vcpu-list
xl cpupool-list
xl cpupool-list -c



# to norm
xl vcpu-pin VM1 all all all
xl vcpu-pin VM2 all all all
xl vcpu-pin d1 all all all
xl vcpu-pin d2 all all all


# VM1,d1 in rtxen, VM2, d2 in credit

xl vcpu-pin VM1 all all all
xl vcpu-pin VM2 all all all
xl vcpu-pin d1 all all all
xl vcpu-pin d2 all all all


xl cpupool-migrate VM1 Pool-0
xl vcpu-pin VM1 all 16-23 16-23
xl cpupool-migrate d1 Pool-0
xl vcpu-pin d1 all 16-23 16-23

xl cpupool-migrate VM2 pacer_credit
xl vcpu-pin VM2 all 24-31 24-31
xl cpupool-migrate d2 pacer_credit
xl vcpu-pin d2 all 24-31 24-31






# move d1 d2 to credit, vm1 vm2 to rtxen

xl vcpu-pin VM1 all all all
xl vcpu-pin VM2 all all all
xl vcpu-pin d1 all all all
xl vcpu-pin d2 all all all
xl cpupool-migrate VM2 Pool-0
xl vcpu-pin VM2 all 16-23 16-23
xl cpupool-migrate VM1 Pool-0
xl vcpu-pin VM1 all 16-23 16-23


xl cpupool-migrate d1 pacer_credit
xl vcpu-pin d1 all 24-31 24-31


# move d1 d2 to rtxen, vm1 vm2 to credit
xl vcpu-pin VM1 all all all
xl vcpu-pin VM2 all all all
xl vcpu-pin d1 all all all
xl vcpu-pin d2 all all all


xl cpupool-migrate VM2 pacer_credit
xl vcpu-pin VM2 all 24-31 24-31
xl cpupool-migrate VM1 pacer_credit
xl vcpu-pin VM1 all 24-31 24-31

xl cpupool-migrate d2 Pool-0
xl vcpu-pin d2 all 16-23 16-23


#!/bin/sh

num_cpus=$(lscpu | grep -m1 "CPU(s):" | grep -Eo '[0-9]')
for (( c=1; c<=$num_cpus; c++))
do
	yes > /dev/null &
done

yes > /dev/null & yes > /dev/null & yes > /dev/null & yes > /dev/null & yes > /dev/null & yes > /dev/null & yes > /dev/null & yes > /dev/null &